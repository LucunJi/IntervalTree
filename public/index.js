(()=>{"use strict";const e=jQuery,t=JXG;function i(e,t){return Math.random()*(t-e)+e}function s(e){return e.point1.coords.usrCoords[1]<e.point2.coords.usrCoords[1]?{left:e.point1,right:e.point2}:{left:e.point2,right:e.point1}}function o(e){const t=s(e);return{left:t.left.coords.usrCoords[1],right:t.right.coords.usrCoords[1],range:t.right.coords.usrCoords[1]-t.left.coords.usrCoords[1]}}function r(e,t){const i=s(e),o=i.left.coords.usrCoords[1];return t>i.right.coords.usrCoords[1]?-1:t<o?1:0}class n{constructor(){this.listeners=Object(null)}on(e,t){var i,s;(null!==(i=(s=this.listeners)[e])&&void 0!==i?i:s[e]=[]).push(t)}notify(e,t){var i;null===(i=this.listeners[e])||void 0===i||i.forEach((e=>e(t)))}}const d="#0072b2",h="#c25010",a="#1f1f1f",u="#1f1f1f";class c extends n{constructor(e){super(),this.acceptChanges=!0,this.segments=[],this.sortingEnd="left",this.medians={},this.segmentVisibleMedians={},this.startAddingSegmentFunction=e=>{if(this.board.getAllObjectsUnderMouse(e).length>0)return;const t=this.board.getUsrCoordsOfMouse(e);this.creatingLine=this.newSegment(t,t)},this.moveEndpointWhenAddingFunction=e=>{if(void 0!==this.creatingLine){const t=this.board.getUsrCoordsOfMouse(e);this.creatingLine.p1.setPosition(JXG.COORDS_BY_USER,[this.creatingLine.p1.coords.usrCoords[1],t[1]]),this.creatingLine.p2.setPosition(JXG.COORDS_BY_USER,t),this.board.update()}},this.releaseAddingSegmentFunction=()=>{this.creatingLine=void 0},this.board=t.JSXGraph.initBoard(e,{boundingbox:[-10,10,10,-10],showCopyright:!1,showNavigation:!1,pan:{enabled:!1},zoom:{wheel:!1}}),this.board.on("down",this.startAddingSegmentFunction),this.board.on("move",this.moveEndpointWhenAddingFunction),this.board.on("up",this.releaseAddingSegmentFunction),this.queryLine=this.board.create("line",[[0,0],[0,1]],{visible:!1,fixed:!1,strokeColor:"#000",dragToTopOfLayer:!0,strokeOpacity:.5,strokeWidth:3}),this.queryLine.on("up",(()=>this.notify("queryLineChange",this.queryLine.point1.coords.usrCoords[1])))}newSegment(e,t){if(!this.acceptChanges)throw new Error("Board is frozen, new segments are not accepted.");const i=this.board.create("point",e,{withLabel:!1,color:h}),s=this.board.create("point",t,{withLabel:!1,color:h}),o=this.board.create("segment",[i,s],{strokeColor:d});return i.on("drag",(()=>s.setPosition(JXG.COORDS_BY_USER,[s.coords.usrCoords[1],i.coords.usrCoords[2]]))),s.on("drag",(()=>i.setPosition(JXG.COORDS_BY_USER,[i.coords.usrCoords[1],s.coords.usrCoords[2]]))),this.segments.push(o),this.segmentVisibleMedians[o.id]=[],this.notify("newSegment",{p1:i,p2:s,l:o}),{p1:i,p2:s,l:o}}sortSegments(){if(1===this.segments.length){const e=this.segments[0],t=0;return e.point1.moveTo([e.point1.coords.usrCoords[1],t],400),void e.point2.moveTo([e.point2.coords.usrCoords[1],t],400)}const e=[],t=[];for(let t=0;t<this.segments.length;t++)e.push(t);"left"===this.sortingEnd?e.sort(((e,t)=>o(this.segments[e]).left-o(this.segments[t]).left)):e.sort(((e,t)=>o(this.segments[t]).right-o(this.segments[e]).right));for(let i=0;i<this.segments.length;i++)t[e[i]]=i;const i=18/(this.segments.length-1);for(let e=0;e<this.segments.length;e++){const s=this.segments[e],o=9-i*t[e];s.point1.moveTo([s.point1.coords.usrCoords[1],o],400),s.point2.moveTo([s.point2.coords.usrCoords[1],o],400)}}finalizeChanges(){if(this.acceptChanges){this.acceptChanges=!1,this.board.off("down",this.startAddingSegmentFunction),this.board.off("move",this.moveEndpointWhenAddingFunction),this.board.off("up",this.releaseAddingSegmentFunction),this.board.suspendUpdate();for(let e=0;e<this.segments.length;e++){const t=this.segments[e];t.setAttribute({strokeColor:a,fixed:!0}),t.point1.setAttribute({color:u,fixed:!0}),t.point2.setAttribute({color:u,fixed:!0})}this.board.unsuspendUpdate(),this.sortSegments()}}getSegments(){return this.segments}populateSegments(e){const t=-9.5,s=9.5;if(1===e){const e=0;let o,r;do{o=i(t,s),r=i(t,s)}while(Math.abs(o-r)<.76);return void this.newSegment([o,e],[r,e])}const o=18/(e-1);for(let r=0;r<e;r++){const e=o*r-9;let n,d;do{n=i(t,s),d=i(t,s)}while(Math.abs(n-d)<.76);this.newSegment([n,e],[d,e])}}addMedian(e,t,i,s=!1,o=e){return void 0===this.medians[o]&&(this.medians[o]={line:this.board.create("line",[[e,0],[e,1]],{strokeColor:i,dash:2,visible:!1,fixed:!0}),relatedSegments:t,color:i},this.setMedianVisible(o,s),!0)}removeMedian(e){return void 0!==this.medians[e]&&(this.setMedianVisible(e,!1),this.board.removeObject(this.medians[e].line),delete this.medians[e],!0)}setMedianVisible(e,t){const i=this.medians[e];if(void 0!==i&&this.medians[e].line.getAttribute("visible")!==t){this.board.suspendUpdate(),i.line.setAttribute({visible:t});for(const s of i.relatedSegments){t?this.segmentVisibleMedians[s.id].push(e):this.segmentVisibleMedians[s.id]=this.segmentVisibleMedians[s.id].filter((t=>t!==e));const i=this.segmentVisibleMedians[s.id];let o=this.acceptChanges?d:a,r=this.acceptChanges?h:u;i.length>0&&(o=r=this.medians[i[i.length-1]].color),s.setAttribute({strokeColor:o}),s.point1.setAttribute({color:r}),s.point2.setAttribute({color:r})}this.board.unsuspendUpdate()}}setSortingEnd(e){this.sortingEnd!==e&&(this.sortingEnd=e,this.acceptChanges||this.sortSegments())}showQueryLine(){this.queryLine.setAttribute({visible:!0}),this.notify("queryLineChange",this.queryLine.point1.coords.usrCoords[1])}}const l=sdsl;class g{constructor(e){this.nodes=[];const t=e.slice(),i=e.slice();t.sort(((e,t)=>s(e).left.coords.usrCoords[1]-s(t).left.coords.usrCoords[1])),i.sort(((e,t)=>s(t).right.coords.usrCoords[1]-s(e).right.coords.usrCoords[1])),this.root=this.makeNode(void 0,t,i,0),this.height=this.root.height}makeNode(e,t,i,o){const n=t.length;if(0===n)return;const d={parent:e,childLeft:void 0,childRight:void 0,depth:void 0===e?0:e.depth+1,height:1,peerIdx:o,median:0,segmentsLeftSorted:[],segmentsRightSorted:[]};let h=0,a=n-1,u=0;for(;u<n;){const e=h>=n?void 0:s(t[h]).left.coords.usrCoords[1],o=a<0?void 0:s(i[a]).right.coords.usrCoords[1];void 0===o||e<o?(d.median=e,h++):(d.median=o,a--),u++}const c=[],l=[],g=[],p=[];for(const e of t){const t=r(e,d.median);(t<0?c:t>0?g:d.segmentsLeftSorted).push(e)}for(const e of i){const t=r(e,d.median);(t<0?l:t>0?p:d.segmentsRightSorted).push(e)}return d.childLeft=this.makeNode(d,c,l,2*o),d.childRight=this.makeNode(d,g,p,2*o+1),void 0!==d.childLeft&&(d.height=d.childLeft.height+1),void 0!==d.childRight&&(d.height=Math.max(d.height,d.childRight.height+1)),this.nodes[(1<<d.depth)-1+d.peerIdx]=d,d}bfs(e){const t=new l.Queue;for(t.push(this.root);t.size()>0;){const i=t.pop();void 0!==i.childLeft&&t.push(i.childLeft),void 0!==i.childRight&&t.push(i.childRight),e(i)}}}class p{constructor(e,t){this.graph=e,this.index=t}canSimulate(e){return void 0!==this.graph[this.index].actionIdx[e]}simulate(e){this.canSimulate(e)&&(this.index=this.graph[this.index].actionIdx[e])}currentNode(){return this.graph[this.index]}}class b extends p{constructor(e){super(b.buildGraph(e.root),0)}static buildGraph(e){const t=[];return b.buildGraphRecursive(t,e).slice(0,-1).forEach((e=>e.actionIdx.finishSubtree=t.length-1)),t}static buildGraphRecursive(e,t){var i;const s=[],o={treeNode:t,leftFinished:!1,rightFinished:!1,actionIdx:{}};let r=e.push(o)-1;s.push(o);const n=null!==(i=t.childLeft)&&void 0!==i?i:t.childRight;if(void 0!==n){e[r].actionIdx.recurse=e.length,this.buildGraphRecursive(e,n).forEach((t=>{t.actionIdx.undoRecurse=r,t.actionIdx.finishSubtree=e.length}));const i={treeNode:t,leftFinished:void 0!==t.childLeft,rightFinished:void 0===t.childLeft,actionIdx:{}};r=e.push(i)-1,s.push(i)}if(void 0!==t.childLeft&&void 0!==t.childRight){e[r].actionIdx.recurse=e.length,this.buildGraphRecursive(e,t.childRight).forEach((t=>{t.actionIdx.undoRecurse=r,t.actionIdx.finishSubtree=e.length}));const i={treeNode:t,leftFinished:!0,rightFinished:!0,actionIdx:{}};r=e.push(i)-1,s.push(i)}return s}}class f extends n{constructor(){super(...arguments),this.state="add"}setState(e){if(this.state===e)return;const t=this.state;this.state=e,this.notify("stateChange",{state:e,prevState:t})}getState(){return this.state}build(e){this.tree=new g(e),this.simulator=new b(this.tree),this.setState("build")}next(){"add"===this.state?this.setState("build"):"build"===this.state&&this.setState("query")}canSimulate(e){return void 0!==this.simulator&&this.simulator.canSimulate(e)}simulate(e){if(!this.canSimulate(e))return;const t=this.simulator,i=t.index;t.simulate(e);const s=t.index,o=new Set;for(let e=Math.min(i,s)+1;e<=Math.max(i,s);e++)o.add(t.graph[e].treeNode);this.notify("algorithmStateChange",{currState:t.currentNode(),addedTreeNodes:s<i?new Set:o,removedTreeNodes:s<i?o:new Set})}}class m{constructor(){this.paletteIdx=0}get(){const e=m.PALETTE[this.paletteIdx%m.PALETTE.length];return this.paletteIdx++,e}}m.PALETTE=["#bc0101","#ffd700","#ea5f94","#ff7300","#11b716","#10d5a8","#0000ff","#9d02d7"];class v extends n{constructor(e,i){super(),this.nodes=[],this.edges=[],this.simulationMode="build",this.board=t.JSXGraph.initBoard(e,{boundingbox:[-10,10,10,-10],showCopyright:!1,drag:{enabled:!1},pan:{enabled:!0,needShift:!1,needTwoFingers:!1},zoom:{wheel:!0,needShift:!1}}),this.tree=new g(i),this.drawTree(),this.initSimulation(),this.board.on("move",(()=>{const e=this.hoveringNode;this.hoveringNode=void 0;for(let e=0;e<this.nodes.length;e++){const t=this.nodes[e];if(void 0!==t&&t.mouseover){this.hoveringNode=this.tree.nodes[e];break}}this.hoveringNode!==e&&this.notify("hoverNode",{node:this.hoveringNode,prevNode:e})}))}drawTree(){if(1===this.tree.height){const e=[0,0];return void(this.nodes[0]=this.board.create("point",e,{size:.5,sizeUnit:"user",withLabel:!1,strokeWidth:4,color:(new m).get()}))}const e=16/(this.tree.height-1),t=this.tree.nodes.map(((e,t)=>void 0===e?void 0:t)).filter((e=>void 0!==e)).sort(((e,t)=>this.tree.nodes[e].median-this.tree.nodes[t].median)),i=[],s=new m;for(const e of t)i[e]=s.get();for(let t=0;t<this.tree.height;t++){const s=8-t*e,o=1<<t,r=19/(o+1);for(let e=0;e<o;e++){const t=o-1+e,n=[r*(e+1)-9.5,s];void 0!==this.tree.nodes[t]&&(this.nodes[t]=this.board.create("point",n,{size:.5,sizeUnit:"user",withLabel:!1,strokeWidth:4,color:i[t]}),t>0&&(this.edges[t]=this.board.create("line",[this.nodes[t],this.nodes[t-1>>>1]],{straightFirst:!1,straightLast:!1})))}}}initSimulation(){"build"===this.simulationMode?(this.setNodeAncestorsVisible(this.tree.root,!0),this.setChildrenVisible(this.tree.root,!1),this.prevNode=void 0,this.currNode=this.tree.root,this.focusNode(this.currNode)):"query"===this.simulationMode&&this.setSubtreeVisible(this.tree.root,!0),this.notify("recursionUpdate",{currNode:this.currNode,prevNode:this.prevNode})}setNodeVisible(e,t){var i,s;const o=(1<<e.depth)-1+e.peerIdx;null===(i=this.nodes[o])||void 0===i||i.setAttribute({visible:t}),null===(s=this.edges[o])||void 0===s||s.setAttribute({visible:t})}setNodeAncestorsVisible(e,t){for(var i,s;void 0!==e;){const o=(1<<e.depth)-1+e.peerIdx;null===(i=this.nodes[o])||void 0===i||i.setAttribute({visible:t}),null===(s=this.edges[o])||void 0===s||s.setAttribute({visible:t}),e=e.parent}}setChildrenVisible(e,t){this.setSubtreeVisible(null==e?void 0:e.childLeft,t),this.setSubtreeVisible(null==e?void 0:e.childRight,t)}setSubtreeVisible(e,t){var i,s;if(void 0===e)return;const o=(1<<e.depth)-1+e.peerIdx;null===(i=this.nodes[o])||void 0===i||i.setAttribute({visible:t}),null===(s=this.edges[o])||void 0===s||s.setAttribute({visible:t}),this.setSubtreeVisible(e.childLeft,t),this.setSubtreeVisible(e.childRight,t)}setNodeHollow(e,t){var i;void 0!==e&&(null===(i=this.graphNode(e))||void 0===i||i.setAttribute({fillOpacity:t?0:1}))}focusNode(e){this.setNodeHollow(this.focusedNode,!1),this.setNodeHollow(this.focusedNode=e,!0)}graphNode(e){return this.nodes[(1<<e.depth)-1+e.peerIdx]}setSimulationMode(e){e!==this.simulationMode&&(this.simulationMode=e,this.initSimulation())}recurse(){this.canRecurse()&&("build"===this.simulationMode||(this.prevNode=this.currNode,this.queryLocation<this.currNode.median?this.currNode=this.currNode.childLeft:this.currNode=this.currNode.childRight,this.focusNode(this.currNode)),this.notify("recursionUpdate",{currNode:this.currNode,prevNode:this.prevNode}))}canRecurse(){return"build"!==this.simulationMode&&void 0!==this.queryLocation&&this.queryLocation!==this.currNode.median&&(this.queryLocation<this.currNode.median?void 0!==this.currNode.childLeft:void 0!==this.currNode.childRight)}undoRecurse(){this.canUndoRecurse()&&("build"===this.simulationMode||(this.currNode=this.prevNode,this.prevNode=this.currNode.parent,this.focusNode(this.currNode)),this.notify("recursionUpdate",{currNode:this.currNode,prevNode:this.prevNode}))}canUndoRecurse(){return"build"!==this.simulationMode&&void 0!==this.queryLocation&&void 0!==this.currNode.parent}finishSubtree(){this.canFinishSubtree()&&this.notify("recursionUpdate",{currNode:this.currNode,prevNode:this.prevNode})}canFinishSubtree(){return this.simulationMode,!1}getMode(){return this.simulationMode}simulateQuery(e){"query"===this.getMode()&&(this.currNode=this.tree.root,this.prevNode=void 0,this.queryLocation=e,this.focusNode(this.tree.root),this.notify("recursionUpdate",{currNode:this.currNode,prevNode:this.prevNode}))}}e((()=>{const t=new f,i=new c("plotboard");let s;const r=e("#populate");r.on("submit",(t=>{i.populateSegments(parseInt(e("#populate-count").val())),t.preventDefault()}));const n={all:e("#algo-buttons button"),start:e("#algo-start"),recurse:e("#algo-recurse"),undoRecurse:e("#algo-undo-recurse"),finishSubtree:e("#algo-finish-subtree")};function d(){n.recurse.prop("disabled",!t.canSimulate("recurse")),n.undoRecurse.prop("disabled",!t.canSimulate("undoRecurse")),n.finishSubtree.prop("disabled",!t.canSimulate("finishSubtree"))}function h(e,t){i.setMedianVisible(e.median,t),null==s||s.setNodeVisible(e,t)}function a(e,s){if("query"===t.getState()&&(n.recurse.prop("disabled",!e.canRecurse()),n.undoRecurse.prop("disabled",!e.canUndoRecurse()),n.finishSubtree.prop("disabled",!e.canFinishSubtree())),"build"===e.getMode());else{for(let t=s;void 0!==t;t=t.parent){let r=[];const n=e.queryLocation;r=n<s.median?t.segmentsLeftSorted.filter((e=>o(e).left<=n)):n>s.median?t.segmentsLeftSorted.filter((e=>o(e).right>=n)):t.segmentsLeftSorted.slice(),i.addMedian(t.median,r,e.graphNode(t).getAttribute("strokeColor"),!0,t.median+"query")}for(let t=(1<<s.depth)-1+s.peerIdx+1;t<e.tree.nodes.length;t++){const s=e.tree.nodes[t];void 0!==s&&i.removeMedian(s.median+"query")}}}n.recurse.on("click",(()=>t.simulate("recurse"))),n.undoRecurse.on("click",(()=>t.simulate("undoRecurse"))),n.finishSubtree.on("click",(()=>t.simulate("finishSubtree"))),t.on("stateChange",(e=>{if(d(),"build"===e.state){i.finalizeChanges();const e=new m;t.tree.bfs((t=>i.addMedian(t.median,t.segmentsLeftSorted,e.get()))),i.setMedianVisible(t.tree.root.median,!0),r.find(":input").prop("disabled",!0)}})),t.on("algorithmStateChange",(e=>{d(),"build"===t.getState()&&(null==s||s.board.suspendUpdate(),null==s||s.focusNode(e.currState.treeNode),e.addedTreeNodes.forEach((e=>h(e,!0))),e.removedTreeNodes.forEach((e=>h(e,!1))),null==s||s.board.unsuspendUpdate())})),i.on("newSegment",(()=>n.start.prop("disabled",!1))),n.all.prop("disabled",!0),n.start.on("click",(()=>{"add"===t.getState()&&0===i.getSegments().length||(e("[name=sort-endpoint]").prop("disabled",!1),"add"===t.getState()?t.build(i.getSegments()):"query"!==t.getState()?t.next():window.location.reload())})),t.on("stateChange",(e=>{switch(e.state){case"add":n.start.html("Start Building"),n.start.removeClass("btn-outline-danger"),n.start.addClass('btn-outline-primary"');break;case"build":n.start.html("Start Query"),n.start.removeClass("btn-outline-danger"),n.start.addClass('btn-outline-primary"');break;case"query":n.start.html("Reset"),n.start.removeClass('btn-outline-primary"'),n.start.addClass("btn-outline-danger")}})),i.setSortingEnd(e("[name=sort-endpoint]:checked").val()),e("[name=sort-endpoint]").each(((t,s)=>{e(s).on("change",(t=>{i.setSortingEnd(e(t.target).val())}))})).prop("disabled",!0),t.on("stateChange",(e=>{if("build"===e.state&&void 0===s)s=new v("treeboard",i.getSegments()),i.on("queryLineChange",(e=>{for(const e of s.tree.nodes)void 0!==e&&i.removeMedian(e.median+"query");null==s||s.simulateQuery(e)})),t.on("stateChange",(e=>{"add"!==e.state&&(null==s||s.setSimulationMode(e.state)),"query"===e.state&&i.showQueryLine()})),s.on("hoverNode",(e=>{void 0!==e.prevNode&&i.removeMedian("hover"),void 0!==e.node&&i.addMedian(e.node.median,e.node.segmentsLeftSorted,s.graphNode(e.node).getAttribute("highlightFillColor"),!0,"hover")})),s.on("recursionUpdate",(e=>a(s,e.currNode))),n.recurse.on("click",(()=>{"query"===t.getState()&&s.recurse()})),n.undoRecurse.on("click",(()=>{"query"===t.getState()&&s.undoRecurse()})),n.finishSubtree.on("click",(()=>{"query"===t.getState()&&s.finishSubtree()})),a(s,s.tree.root);else if("query"===e.state&&void 0!==s)for(const e of s.tree.nodes)void 0!==e&&i.setMedianVisible(e.median,!1)}))}))})();