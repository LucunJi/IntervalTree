(()=>{"use strict";const e=jQuery,t=JXG;function s(e,t){return Math.random()*(t-e)+e}function i(e){return e.point1.coords.usrCoords[1]<e.point2.coords.usrCoords[1]?{left:e.point1,right:e.point2}:{left:e.point2,right:e.point1}}function o(e){const t=i(e);return{left:t.left.coords.usrCoords[1],right:t.right.coords.usrCoords[1],range:t.right.coords.usrCoords[1]-t.left.coords.usrCoords[1]}}function r(e,t){const s=i(e),o=s.left.coords.usrCoords[1];return t>s.right.coords.usrCoords[1]?-1:t<o?1:0}class n{constructor(){this.listeners=Object(null)}on(e,t){var s,i;(null!==(s=(i=this.listeners)[e])&&void 0!==s?s:i[e]=[]).push(t)}notify(e,t){var s;null===(s=this.listeners[e])||void 0===s||s.forEach((e=>e(t)))}}const d="#0072b2",h="#c25010",a="#1f1f1f",l="#1f1f1f";class u extends n{constructor(e){super(),this.acceptChanges=!0,this.segments=[],this.sortingEnd="left",this.medians={},this.segmentVisibleMedians={},this.startAddingSegmentFunction=e=>{if(this.board.getAllObjectsUnderMouse(e).length>0)return;const t=this.board.getUsrCoordsOfMouse(e);this.creatingLine=this.newSegment(t,t)},this.moveEndpointWhenAddingFunction=e=>{if(void 0!==this.creatingLine){const t=this.board.getUsrCoordsOfMouse(e);this.creatingLine.p1.setPosition(JXG.COORDS_BY_USER,[this.creatingLine.p1.coords.usrCoords[1],t[1]]),this.creatingLine.p2.setPosition(JXG.COORDS_BY_USER,t),this.board.update()}},this.releaseAddingSegmentFunction=()=>{this.creatingLine=void 0},this.board=t.JSXGraph.initBoard(e,{boundingbox:[-10,10,10,-10],showCopyright:!1,showNavigation:!1,pan:{enabled:!1},zoom:{wheel:!1}}),this.board.on("down",this.startAddingSegmentFunction),this.board.on("move",this.moveEndpointWhenAddingFunction),this.board.on("up",this.releaseAddingSegmentFunction),this.queryLine=this.board.create("line",[[0,0],[0,1]],{visible:!1,fixed:!1,strokeColor:"#000",dragToTopOfLayer:!0,strokeOpacity:.5,strokeWidth:3}),this.queryLine.on("up",(()=>this.notify("queryLineChange",this.queryLine.point1.coords.usrCoords[1])))}newSegment(e,t){if(!this.acceptChanges)throw new Error("Board is frozen, new segments are not accepted.");const s=this.board.create("point",e,{withLabel:!1,color:h}),i=this.board.create("point",t,{withLabel:!1,color:h}),o=this.board.create("segment",[s,i],{strokeColor:d});return s.on("drag",(()=>i.setPosition(JXG.COORDS_BY_USER,[i.coords.usrCoords[1],s.coords.usrCoords[2]]))),i.on("drag",(()=>s.setPosition(JXG.COORDS_BY_USER,[s.coords.usrCoords[1],i.coords.usrCoords[2]]))),this.segments.push(o),this.segmentVisibleMedians[o.id]=[],this.notify("newSegment",{p1:s,p2:i,l:o}),{p1:s,p2:i,l:o}}sortSegments(){if(1===this.segments.length){const e=this.segments[0],t=0;return e.point1.moveTo([e.point1.coords.usrCoords[1],t],400),void e.point2.moveTo([e.point2.coords.usrCoords[1],t],400)}const e=[],t=[];for(let t=0;t<this.segments.length;t++)e.push(t);"left"===this.sortingEnd?e.sort(((e,t)=>o(this.segments[e]).left-o(this.segments[t]).left)):e.sort(((e,t)=>o(this.segments[t]).right-o(this.segments[e]).right));for(let s=0;s<this.segments.length;s++)t[e[s]]=s;const s=18/(this.segments.length-1);for(let e=0;e<this.segments.length;e++){const i=this.segments[e],o=9-s*t[e];i.point1.moveTo([i.point1.coords.usrCoords[1],o],400),i.point2.moveTo([i.point2.coords.usrCoords[1],o],400)}}finalizeChanges(){if(this.acceptChanges){this.acceptChanges=!1,this.board.off("down",this.startAddingSegmentFunction),this.board.off("move",this.moveEndpointWhenAddingFunction),this.board.off("up",this.releaseAddingSegmentFunction),this.board.suspendUpdate();for(let e=0;e<this.segments.length;e++){const t=this.segments[e];t.setAttribute({strokeColor:a,fixed:!0}),t.point1.setAttribute({color:l,fixed:!0}),t.point2.setAttribute({color:l,fixed:!0})}this.board.unsuspendUpdate(),this.sortSegments()}}getSegments(){return this.segments}populateSegments(e){const t=-9.5,i=9.5;if(1===e){const e=0;let o,r;do{o=s(t,i),r=s(t,i)}while(Math.abs(o-r)<.76);return void this.newSegment([o,e],[r,e])}const o=18/(e-1);for(let r=0;r<e;r++){const e=o*r-9;let n,d;do{n=s(t,i),d=s(t,i)}while(Math.abs(n-d)<.76);this.newSegment([n,e],[d,e])}}addMedian(e,t,s,i=!1,o=e){return void 0===this.medians[o]&&(this.medians[o]={line:this.board.create("line",[[e,0],[e,1]],{strokeColor:s,dash:2,visible:!1,fixed:!0}),relatedSegments:t,color:s},this.setMedianVisible(o,i),!0)}removeMedian(e){return void 0!==this.medians[e]&&(this.setMedianVisible(e,!1),this.board.removeObject(this.medians[e].line),delete this.medians[e],!0)}setMedianVisible(e,t){const s=this.medians[e];if(void 0!==s&&this.medians[e].line.getAttribute("visible")!==t){this.board.suspendUpdate(),s.line.setAttribute({visible:t});for(const i of s.relatedSegments){t?this.segmentVisibleMedians[i.id].push(e):this.segmentVisibleMedians[i.id]=this.segmentVisibleMedians[i.id].filter((t=>t!==e));const s=this.segmentVisibleMedians[i.id];let o=this.acceptChanges?d:a,r=this.acceptChanges?h:l;s.length>0&&(o=r=this.medians[s[s.length-1]].color),i.setAttribute({strokeColor:o}),i.point1.setAttribute({color:r}),i.point2.setAttribute({color:r})}this.board.unsuspendUpdate()}}setSortingEnd(e){this.sortingEnd!==e&&(this.sortingEnd=e,this.acceptChanges||this.sortSegments())}showQueryLine(){this.queryLine.setAttribute({visible:!0})}getQuery(){return this.queryLine.point1.coords.usrCoords[1]}}const c=sdsl;class g{constructor(e){if(this.nodes=[],0===e.length)throw new Error("Input array is empty");const t=e.slice(),s=e.slice();t.sort(((e,t)=>i(e).left.coords.usrCoords[1]-i(t).left.coords.usrCoords[1])),s.sort(((e,t)=>i(t).right.coords.usrCoords[1]-i(e).right.coords.usrCoords[1])),this.root=this.makeNode(void 0,t,s,0),this.height=this.root.height}makeNode(e,t,s,o){const n=t.length;if(0===n)return;const d={parent:e,childLeft:void 0,childRight:void 0,depth:void 0===e?0:e.depth+1,height:1,peerIdx:o,median:0,segmentsLeftSorted:[],segmentsRightSorted:[]};let h=0,a=n-1,l=0;for(;l<n;){const e=h>=n?void 0:i(t[h]).left.coords.usrCoords[1],o=a<0?void 0:i(s[a]).right.coords.usrCoords[1];void 0===o||e<o?(d.median=e,h++):(d.median=o,a--),l++}const u=[],c=[],g=[],p=[];for(const e of t){const t=r(e,d.median);(t<0?u:t>0?g:d.segmentsLeftSorted).push(e)}for(const e of s){const t=r(e,d.median);(t<0?c:t>0?p:d.segmentsRightSorted).push(e)}return d.childLeft=this.makeNode(d,u,c,2*o),d.childRight=this.makeNode(d,g,p,2*o+1),void 0!==d.childLeft&&(d.height=d.childLeft.height+1),void 0!==d.childRight&&(d.height=Math.max(d.height,d.childRight.height+1)),this.nodes[(1<<d.depth)-1+d.peerIdx]=d,d}bfs(e){const t=new c.Queue;for(t.push(this.root);t.size()>0;){const s=t.pop();void 0!==s.childLeft&&t.push(s.childLeft),void 0!==s.childRight&&t.push(s.childRight),e(s)}}}class p{constructor(e,t){this.graph=e,this.index=t}canSimulate(e){return void 0!==this.graph[this.index].actionIdx[e]}simulate(e){this.canSimulate(e)&&(this.index=this.graph[this.index].actionIdx[e])}currentNode(){return this.graph[this.index]}}class m{constructor(e,t,s,i={},o=e.segmentsLeftSorted){this.treeNode=e,this.leftFinished=t,this.rightFinished=s,this.actionIdx=i,this.involvedSegs=o}}class b extends p{constructor(e){super(b.buildGraph(e.root),0)}static buildGraph(e){const t=[];return b.buildGraphRecursive(t,e).slice(0,-1).forEach((e=>e.actionIdx.finishSubtree=t.length-1)),t}static buildGraphRecursive(e,t){var s;const i=null!==(s=t.childLeft)&&void 0!==s?s:t.childRight,o=void 0!==t.childLeft,r=void 0!==t.childLeft&&void 0!==t.childRight,n=[new m(t,!1,!1)],d=[];n.push(),void 0!==i&&(n.push(new m(t,o,!o)),d[1]=i),r&&(n.push(new m(t,!0,!0)),d[2]=t.childRight);let h=-1;return n.forEach(((t,s)=>{s>0&&(e[h].actionIdx.recurse=e.length,this.buildGraphRecursive(e,d[s]).forEach((t=>{t.actionIdx.undoRecurse=h,t.actionIdx.finishSubtree=e.length}))),h=e.push(t)-1})),n}}class f extends p{constructor(e,t){super(f.buildGraph(e.root,t),0)}static buildGraph(e,t){const s=[];let i=e;do{s.length>0&&(s[s.length-1].actionIdx.recurse=s.length);const e=s.length>0?s.length-1:void 0;let r,n;t<i.median?(r=i.segmentsLeftSorted.filter((e=>o(e).left<=t)),n=i.childLeft):t>i.median?(r=i.segmentsLeftSorted.filter((e=>o(e).right>=t)),n=i.childRight):r=i.segmentsLeftSorted.slice(),s.push(new m(i,!1,!1,{undoRecurse:e},r)),i=n}while(void 0!==i);return s}}class v extends n{constructor(){super(...arguments),this.state="add"}setState(e){if(this.state===e)return;const t=this.state;this.state=e,this.notify("stateChange",{state:e,prevState:t})}notifyAlgoReset(e,t){this.notify("algorithmReset",{simState:this.state,algoState:e.currentNode(),tree:t})}getState(){return this.state}build(e){this.tree=new g(e),this.simulator=new b(this.tree),this.setState("build"),this.notifyAlgoReset(this.simulator,this.tree)}query(e){if(void 0===this.tree)throw new Error("Tree is not built before query");this.simulator=new f(this.tree,e),this.setState("query"),this.notifyAlgoReset(this.simulator,this.tree)}canSimulate(e){return void 0!==this.simulator&&this.simulator.canSimulate(e)}simulate(e){if(!this.canSimulate(e))return;const t=this.simulator,s=t.index;t.simulate(e);const i=t.index,o=new Map;for(let e=Math.min(s,i)+1;e<=Math.max(s,i);e++)o.set(t.graph[e].treeNode,t.graph[e].involvedSegs);this.notify("algorithmStateChange",{currState:t.currentNode(),addedTreeNodesSegs:i<s?new Map:o,removedTreeNodesSegs:i<s?o:new Map})}}class S{constructor(){this.paletteIdx=0}get(){const e=S.PALETTE[this.paletteIdx%S.PALETTE.length];return this.paletteIdx++,e}}S.PALETTE=["#bc0101","#ffd700","#ea5f94","#ff7300","#11b716","#10d5a8","#0000ff","#9d02d7"];class C extends n{constructor(e,s){super(),this.nodes=[],this.edges=[],this.simulationMode="build",this.board=t.JSXGraph.initBoard(e,{boundingbox:[-10,10,10,-10],showCopyright:!1,drag:{enabled:!1},pan:{enabled:!0,needShift:!1,needTwoFingers:!1},zoom:{wheel:!0,needShift:!1}}),this.tree=new g(s),this.drawTree(),this.initSimulation(),this.board.on("move",(()=>{const e=this.hoveringNode;this.hoveringNode=void 0;for(let e=0;e<this.nodes.length;e++){const t=this.nodes[e];if(void 0!==t&&t.mouseover){this.hoveringNode=this.tree.nodes[e];break}}this.hoveringNode!==e&&this.notify("hoverNode",{node:this.hoveringNode,prevNode:e})}))}drawTree(){if(1===this.tree.height){const e=[0,0];return void(this.nodes[0]=this.board.create("point",e,{size:.5,sizeUnit:"user",withLabel:!1,strokeWidth:4,color:(new S).get()}))}const e=16/(this.tree.height-1),t=this.tree.nodes.map(((e,t)=>void 0===e?void 0:t)).filter((e=>void 0!==e)).sort(((e,t)=>this.tree.nodes[e].median-this.tree.nodes[t].median)),s=[],i=new S;for(const e of t)s[e]=i.get();for(let t=0;t<this.tree.height;t++){const i=8-t*e,o=1<<t,r=19/(o+1);for(let e=0;e<o;e++){const t=o-1+e,n=[r*(e+1)-9.5,i];void 0!==this.tree.nodes[t]&&(this.nodes[t]=this.board.create("point",n,{size:.5,sizeUnit:"user",withLabel:!1,strokeWidth:4,color:s[t]}),t>0&&(this.edges[t]=this.board.create("line",[this.nodes[t],this.nodes[t-1>>>1]],{straightFirst:!1,straightLast:!1})))}}}initSimulation(){"build"===this.simulationMode?(this.setNodeAncestorsVisible(this.tree.root,!0),this.setChildrenVisible(this.tree.root,!1),this.prevNode=void 0,this.currNode=this.tree.root,this.focusNode(this.currNode)):"query"===this.simulationMode&&this.setSubtreeVisible(this.tree.root,!0)}setNodeVisible(e,t){var s,i;const o=(1<<e.depth)-1+e.peerIdx;null===(s=this.nodes[o])||void 0===s||s.setAttribute({visible:t}),null===(i=this.edges[o])||void 0===i||i.setAttribute({visible:t})}setNodeAncestorsVisible(e,t){for(var s,i;void 0!==e;){const o=(1<<e.depth)-1+e.peerIdx;null===(s=this.nodes[o])||void 0===s||s.setAttribute({visible:t}),null===(i=this.edges[o])||void 0===i||i.setAttribute({visible:t}),e=e.parent}}setChildrenVisible(e,t){this.setSubtreeVisible(null==e?void 0:e.childLeft,t),this.setSubtreeVisible(null==e?void 0:e.childRight,t)}setSubtreeVisible(e,t){var s,i;if(void 0===e)return;const o=(1<<e.depth)-1+e.peerIdx;null===(s=this.nodes[o])||void 0===s||s.setAttribute({visible:t}),null===(i=this.edges[o])||void 0===i||i.setAttribute({visible:t}),this.setSubtreeVisible(e.childLeft,t),this.setSubtreeVisible(e.childRight,t)}setNodeHollow(e,t){var s;void 0!==e&&(null===(s=this.graphNode(e))||void 0===s||s.setAttribute({fillOpacity:t?0:1}))}focusNode(e){this.setNodeHollow(this.focusedNode,!1),this.setNodeHollow(this.focusedNode=e,!0)}graphNode(e){return this.nodes[(1<<e.depth)-1+e.peerIdx]}setSimulationMode(e){e!==this.simulationMode&&(this.simulationMode=e,this.initSimulation())}getMode(){return this.simulationMode}}e((()=>{const t=new v,s=new u("plotboard");let i;const o=e("#populate");o.on("submit",(t=>{s.populateSegments(parseInt(e("#populate-count").val())),t.preventDefault()}));const r={all:e("#algo-buttons button"),start:e("#algo-start"),recurse:e("#algo-recurse"),undoRecurse:e("#algo-undo-recurse"),finishSubtree:e("#algo-finish-subtree")};function n(){r.recurse.prop("disabled",!t.canSimulate("recurse")),r.undoRecurse.prop("disabled",!t.canSimulate("undoRecurse")),r.finishSubtree.prop("disabled",!t.canSimulate("finishSubtree"))}function d(e,t){s.setMedianVisible(e.median,t),null==i||i.setNodeVisible(e,t)}function h(e,t,o){const r=i.graphNode(e).getAttribute("strokeColor");o?s.addMedian(e.median,t,r,!0,e.median+"query"):s.removeMedian(e.median+"query")}r.recurse.on("click",(()=>t.simulate("recurse"))),r.undoRecurse.on("click",(()=>t.simulate("undoRecurse"))),r.finishSubtree.on("click",(()=>t.simulate("finishSubtree"))),t.on("stateChange",(r=>{var n;"add"!==r.state&&(o.find(":input").prop("disabled",!0),e("[name=sort-endpoint]").prop("disabled",!1),null==i||i.setSimulationMode(r.state)),"build"===r.state&&s.finalizeChanges(),"query"===r.state&&(null===(n=t.tree)||void 0===n||n.nodes.forEach((e=>{void 0!==e&&s.setMedianVisible(e.median,!1)})),s.showQueryLine())})),t.on("algorithmReset",(e=>{switch(n(),e.simState){case"build":{const t=new S;e.tree.bfs((e=>{var o;const r=null!==(o=null==i?void 0:i.graphNode(e).getAttribute("strokeColor"))&&void 0!==o?o:t.get();s.addMedian(e.median,e.segmentsLeftSorted,r)})),s.setMedianVisible(e.algoState.treeNode.median,!0)}break;case"query":new S,h(e.algoState.treeNode,e.algoState.involvedSegs,!0)}})),t.on("algorithmStateChange",(e=>{switch(n(),t.getState()){case"build":null==i||i.board.suspendUpdate(),null==i||i.focusNode(e.currState.treeNode),e.addedTreeNodesSegs.forEach(((e,t)=>d(t,!0))),e.removedTreeNodesSegs.forEach(((e,t)=>d(t,!1))),null==i||i.board.unsuspendUpdate();break;case"query":e.addedTreeNodesSegs.forEach(((e,t)=>h(t,e,!0))),e.removedTreeNodesSegs.forEach(((e,t)=>h(t,e,!1))),null==i||i.focusNode(e.currState.treeNode)}})),s.on("newSegment",(()=>r.start.prop("disabled",!1))),s.on("queryLineChange",(e=>{var i;null===(i=t.tree)||void 0===i||i.nodes.forEach((e=>{void 0!==e&&s.removeMedian(e.median+"query")})),t.query(e)})),r.all.prop("disabled",!0),r.start.on("click",(()=>{switch(t.getState()){case"add":s.getSegments().length>0&&t.build(s.getSegments());break;case"build":t.query(s.getQuery());break;case"query":window.location.reload()}})),t.on("stateChange",(e=>{switch(e.state){case"add":r.start.html("Start Building"),r.start.removeClass("btn-outline-danger"),r.start.addClass('btn-outline-primary"');break;case"build":r.start.html("Start Query"),r.start.removeClass("btn-outline-danger"),r.start.addClass('btn-outline-primary"');break;case"query":r.start.html("Reset"),r.start.removeClass('btn-outline-primary"'),r.start.addClass("btn-outline-danger")}})),s.setSortingEnd(e("[name=sort-endpoint]:checked").val()),e("[name=sort-endpoint]").each(((t,i)=>{e(i).on("change",(t=>{s.setSortingEnd(e(t.target).val())}))})).prop("disabled",!0),t.on("stateChange",(e=>{"build"===e.state&&void 0===i&&(i=new C("treeboard",s.getSegments()),i.on("hoverNode",(e=>{void 0!==e.prevNode&&s.removeMedian("hover"),void 0!==e.node&&s.addMedian(e.node.median,e.node.segmentsLeftSorted,i.graphNode(e.node).getAttribute("highlightFillColor"),!0,"hover")})))}))}))})();